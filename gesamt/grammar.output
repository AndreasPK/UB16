Terminals unused in grammar

   LEXER_ERROR


Grammar

    0 $accept: yyyAugNonterm $end

    1 $@1: %empty

    2 yyyAugNonterm: $@1 program

    3 lexpr: ID
    4      | term CIRCUMFLEX

    5 maybeid: ID
    6        | %empty

    7 guardedlist: guarded SEMIC guardedlist
    8            | %empty

    9 orexpr: term OR orexpr
   10       | term

   11 plusexpr: term PLUS plusexpr
   12         | term

   13 dostat: ID COLON DO guardedlist END
   14       | DO guardedlist END

   15 multexpr: term STAR multexpr
   16         | term

   17 arguments: expr
   18          | expr COMMA arguments
   19          | %empty

   20 term: BRACEL expr BRACER
   21     | NUMBER
   22     | funcCall
   23     | ID

   24 parameterDef: ID COMMA parameterDef
   25             | ID
   26             | %empty

   27 guarded: expr ARROWR stats CONTINUE maybeid
   28        | expr ARROWR stats BREAK maybeid

   29 stat: RETURN expr
   30     | dostat
   31     | VAR ID ASSIGN expr
   32     | lexpr ASSIGN expr
   33     | term

   34 program: program ID BRACEL parameterDef BRACER stats END SEMIC
   35        | %empty

   36 funcCall: ID BRACEL arguments BRACER

   37 expr: preexpr
   38     | term CIRCUMFLEX
   39     | term PLUS plusexpr
   40     | term STAR multexpr
   41     | term OR orexpr
   42     | term LESS term
   43     | term EQUAL term

   44 stats: stat SEMIC stats
   45      | %empty

   46 preexpr: NOT preexpr
   47        | MINUS preexpr
   48        | term


Terminals, with rules where they appear

$end (0) 0
error (256)
STAR (258) 15 40
NUMBER (259) 21
DO (260) 13 14
NOT (261) 46
MINUS (262) 47
LEXER_ERROR (263)
ID (264) 3 5 13 23 24 25 31 34 36
BREAK (265) 28
COLON (266) 13
ARROWR (267) 27 28
CONTINUE (268) 27
BRACEL (269) 20 34 36
COMMA (270) 18 24
EQUAL (271) 43
OR (272) 9 41
BRACER (273) 20 34 36
ASSIGN (274) 31 32
RETURN (275) 29
LESS (276) 42
PLUS (277) 11 39
VAR (278) 31
END (279) 13 14 34
SEMIC (280) 7 34 44
CIRCUMFLEX (281) 4 38


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
yyyAugNonterm (28)
    on left: 2, on right: 0
$@1 (29)
    on left: 1, on right: 2
lexpr (30)
    on left: 3 4, on right: 32
maybeid (31)
    on left: 5 6, on right: 27 28
guardedlist (32)
    on left: 7 8, on right: 7 13 14
orexpr (33)
    on left: 9 10, on right: 9 41
plusexpr (34)
    on left: 11 12, on right: 11 39
dostat (35)
    on left: 13 14, on right: 30
multexpr (36)
    on left: 15 16, on right: 15 40
arguments (37)
    on left: 17 18 19, on right: 18 36
term (38)
    on left: 20 21 22 23, on right: 4 9 10 11 12 15 16 33 38 39 40
    41 42 43 48
parameterDef (39)
    on left: 24 25 26, on right: 24 34
guarded (40)
    on left: 27 28, on right: 7
stat (41)
    on left: 29 30 31 32 33, on right: 44
program (42)
    on left: 34 35, on right: 2 34
funcCall (43)
    on left: 36, on right: 22
expr (44)
    on left: 37 38 39 40 41 42 43, on right: 17 18 20 27 28 29 31 32
stats (45)
    on left: 44 45, on right: 27 28 34 44
preexpr (46)
    on left: 46 47 48, on right: 37 46 47


State 0

    0 $accept: . yyyAugNonterm $end

    $default  reduce using rule 1 ($@1)

    yyyAugNonterm  go to state 1
    $@1            go to state 2


State 1

    0 $accept: yyyAugNonterm . $end

    $end  shift, and go to state 3


State 2

    2 yyyAugNonterm: $@1 . program

    $default  reduce using rule 35 (program)

    program  go to state 4


State 3

    0 $accept: yyyAugNonterm $end .

    $default  accept


State 4

    2 yyyAugNonterm: $@1 program .
   34 program: program . ID BRACEL parameterDef BRACER stats END SEMIC

    ID  shift, and go to state 5

    $default  reduce using rule 2 (yyyAugNonterm)


State 5

   34 program: program ID . BRACEL parameterDef BRACER stats END SEMIC

    BRACEL  shift, and go to state 6


State 6

   34 program: program ID BRACEL . parameterDef BRACER stats END SEMIC

    ID  shift, and go to state 7

    $default  reduce using rule 26 (parameterDef)

    parameterDef  go to state 8


State 7

   24 parameterDef: ID . COMMA parameterDef
   25             | ID .

    COMMA  shift, and go to state 9

    $default  reduce using rule 25 (parameterDef)


State 8

   34 program: program ID BRACEL parameterDef . BRACER stats END SEMIC

    BRACER  shift, and go to state 10


State 9

   24 parameterDef: ID COMMA . parameterDef

    ID  shift, and go to state 7

    $default  reduce using rule 26 (parameterDef)

    parameterDef  go to state 11


State 10

   34 program: program ID BRACEL parameterDef BRACER . stats END SEMIC

    NUMBER  shift, and go to state 12
    DO      shift, and go to state 13
    ID      shift, and go to state 14
    BRACEL  shift, and go to state 15
    RETURN  shift, and go to state 16
    VAR     shift, and go to state 17

    $default  reduce using rule 45 (stats)

    lexpr     go to state 18
    dostat    go to state 19
    term      go to state 20
    stat      go to state 21
    funcCall  go to state 22
    stats     go to state 23


State 11

   24 parameterDef: ID COMMA parameterDef .

    $default  reduce using rule 24 (parameterDef)


State 12

   21 term: NUMBER .

    $default  reduce using rule 21 (term)


State 13

   14 dostat: DO . guardedlist END

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    $default  reduce using rule 8 (guardedlist)

    guardedlist  go to state 27
    term         go to state 28
    guarded      go to state 29
    funcCall     go to state 22
    expr         go to state 30
    preexpr      go to state 31


State 14

    3 lexpr: ID .
   13 dostat: ID . COLON DO guardedlist END
   23 term: ID .
   36 funcCall: ID . BRACEL arguments BRACER

    COLON   shift, and go to state 32
    BRACEL  shift, and go to state 33

    ASSIGN    reduce using rule 3 (lexpr)
    $default  reduce using rule 23 (term)


State 15

   20 term: BRACEL . expr BRACER

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 28
    funcCall  go to state 22
    expr      go to state 34
    preexpr   go to state 31


State 16

   29 stat: RETURN . expr

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 28
    funcCall  go to state 22
    expr      go to state 35
    preexpr   go to state 31


State 17

   31 stat: VAR . ID ASSIGN expr

    ID  shift, and go to state 36


State 18

   32 stat: lexpr . ASSIGN expr

    ASSIGN  shift, and go to state 37


State 19

   30 stat: dostat .

    $default  reduce using rule 30 (stat)


State 20

    4 lexpr: term . CIRCUMFLEX
   33 stat: term .

    CIRCUMFLEX  shift, and go to state 38

    $default  reduce using rule 33 (stat)


State 21

   44 stats: stat . SEMIC stats

    SEMIC  shift, and go to state 39


State 22

   22 term: funcCall .

    $default  reduce using rule 22 (term)


State 23

   34 program: program ID BRACEL parameterDef BRACER stats . END SEMIC

    END  shift, and go to state 40


State 24

   46 preexpr: NOT . preexpr

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 41
    funcCall  go to state 22
    preexpr   go to state 42


State 25

   47 preexpr: MINUS . preexpr

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 41
    funcCall  go to state 22
    preexpr   go to state 43


State 26

   23 term: ID .
   36 funcCall: ID . BRACEL arguments BRACER

    BRACEL  shift, and go to state 33

    $default  reduce using rule 23 (term)


State 27

   14 dostat: DO guardedlist . END

    END  shift, and go to state 44


State 28

   38 expr: term . CIRCUMFLEX
   39     | term . PLUS plusexpr
   40     | term . STAR multexpr
   41     | term . OR orexpr
   42     | term . LESS term
   43     | term . EQUAL term
   48 preexpr: term .

    STAR        shift, and go to state 45
    EQUAL       shift, and go to state 46
    OR          shift, and go to state 47
    LESS        shift, and go to state 48
    PLUS        shift, and go to state 49
    CIRCUMFLEX  shift, and go to state 50

    $default  reduce using rule 48 (preexpr)


State 29

    7 guardedlist: guarded . SEMIC guardedlist

    SEMIC  shift, and go to state 51


State 30

   27 guarded: expr . ARROWR stats CONTINUE maybeid
   28        | expr . ARROWR stats BREAK maybeid

    ARROWR  shift, and go to state 52


State 31

   37 expr: preexpr .

    $default  reduce using rule 37 (expr)


State 32

   13 dostat: ID COLON . DO guardedlist END

    DO  shift, and go to state 53


State 33

   36 funcCall: ID BRACEL . arguments BRACER

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    $default  reduce using rule 19 (arguments)

    arguments  go to state 54
    term       go to state 28
    funcCall   go to state 22
    expr       go to state 55
    preexpr    go to state 31


State 34

   20 term: BRACEL expr . BRACER

    BRACER  shift, and go to state 56


State 35

   29 stat: RETURN expr .

    $default  reduce using rule 29 (stat)


State 36

   31 stat: VAR ID . ASSIGN expr

    ASSIGN  shift, and go to state 57


State 37

   32 stat: lexpr ASSIGN . expr

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 28
    funcCall  go to state 22
    expr      go to state 58
    preexpr   go to state 31


State 38

    4 lexpr: term CIRCUMFLEX .

    $default  reduce using rule 4 (lexpr)


State 39

   44 stats: stat SEMIC . stats

    NUMBER  shift, and go to state 12
    DO      shift, and go to state 13
    ID      shift, and go to state 14
    BRACEL  shift, and go to state 15
    RETURN  shift, and go to state 16
    VAR     shift, and go to state 17

    $default  reduce using rule 45 (stats)

    lexpr     go to state 18
    dostat    go to state 19
    term      go to state 20
    stat      go to state 21
    funcCall  go to state 22
    stats     go to state 59


State 40

   34 program: program ID BRACEL parameterDef BRACER stats END . SEMIC

    SEMIC  shift, and go to state 60


State 41

   48 preexpr: term .

    $default  reduce using rule 48 (preexpr)


State 42

   46 preexpr: NOT preexpr .

    $default  reduce using rule 46 (preexpr)


State 43

   47 preexpr: MINUS preexpr .

    $default  reduce using rule 47 (preexpr)


State 44

   14 dostat: DO guardedlist END .

    $default  reduce using rule 14 (dostat)


State 45

   40 expr: term STAR . multexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    multexpr  go to state 61
    term      go to state 62
    funcCall  go to state 22


State 46

   43 expr: term EQUAL . term

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 63
    funcCall  go to state 22


State 47

   41 expr: term OR . orexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    orexpr    go to state 64
    term      go to state 65
    funcCall  go to state 22


State 48

   42 expr: term LESS . term

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 66
    funcCall  go to state 22


State 49

   39 expr: term PLUS . plusexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    plusexpr  go to state 67
    term      go to state 68
    funcCall  go to state 22


State 50

   38 expr: term CIRCUMFLEX .

    $default  reduce using rule 38 (expr)


State 51

    7 guardedlist: guarded SEMIC . guardedlist

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    $default  reduce using rule 8 (guardedlist)

    guardedlist  go to state 69
    term         go to state 28
    guarded      go to state 29
    funcCall     go to state 22
    expr         go to state 30
    preexpr      go to state 31


State 52

   27 guarded: expr ARROWR . stats CONTINUE maybeid
   28        | expr ARROWR . stats BREAK maybeid

    NUMBER  shift, and go to state 12
    DO      shift, and go to state 13
    ID      shift, and go to state 14
    BRACEL  shift, and go to state 15
    RETURN  shift, and go to state 16
    VAR     shift, and go to state 17

    $default  reduce using rule 45 (stats)

    lexpr     go to state 18
    dostat    go to state 19
    term      go to state 20
    stat      go to state 21
    funcCall  go to state 22
    stats     go to state 70


State 53

   13 dostat: ID COLON DO . guardedlist END

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    $default  reduce using rule 8 (guardedlist)

    guardedlist  go to state 71
    term         go to state 28
    guarded      go to state 29
    funcCall     go to state 22
    expr         go to state 30
    preexpr      go to state 31


State 54

   36 funcCall: ID BRACEL arguments . BRACER

    BRACER  shift, and go to state 72


State 55

   17 arguments: expr .
   18          | expr . COMMA arguments

    COMMA  shift, and go to state 73

    $default  reduce using rule 17 (arguments)


State 56

   20 term: BRACEL expr BRACER .

    $default  reduce using rule 20 (term)


State 57

   31 stat: VAR ID ASSIGN . expr

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    term      go to state 28
    funcCall  go to state 22
    expr      go to state 74
    preexpr   go to state 31


State 58

   32 stat: lexpr ASSIGN expr .

    $default  reduce using rule 32 (stat)


State 59

   44 stats: stat SEMIC stats .

    $default  reduce using rule 44 (stats)


State 60

   34 program: program ID BRACEL parameterDef BRACER stats END SEMIC .

    $default  reduce using rule 34 (program)


State 61

   40 expr: term STAR multexpr .

    $default  reduce using rule 40 (expr)


State 62

   15 multexpr: term . STAR multexpr
   16         | term .

    STAR  shift, and go to state 75

    $default  reduce using rule 16 (multexpr)


State 63

   43 expr: term EQUAL term .

    $default  reduce using rule 43 (expr)


State 64

   41 expr: term OR orexpr .

    $default  reduce using rule 41 (expr)


State 65

    9 orexpr: term . OR orexpr
   10       | term .

    OR  shift, and go to state 76

    $default  reduce using rule 10 (orexpr)


State 66

   42 expr: term LESS term .

    $default  reduce using rule 42 (expr)


State 67

   39 expr: term PLUS plusexpr .

    $default  reduce using rule 39 (expr)


State 68

   11 plusexpr: term . PLUS plusexpr
   12         | term .

    PLUS  shift, and go to state 77

    $default  reduce using rule 12 (plusexpr)


State 69

    7 guardedlist: guarded SEMIC guardedlist .

    $default  reduce using rule 7 (guardedlist)


State 70

   27 guarded: expr ARROWR stats . CONTINUE maybeid
   28        | expr ARROWR stats . BREAK maybeid

    BREAK     shift, and go to state 78
    CONTINUE  shift, and go to state 79


State 71

   13 dostat: ID COLON DO guardedlist . END

    END  shift, and go to state 80


State 72

   36 funcCall: ID BRACEL arguments BRACER .

    $default  reduce using rule 36 (funcCall)


State 73

   18 arguments: expr COMMA . arguments

    NUMBER  shift, and go to state 12
    NOT     shift, and go to state 24
    MINUS   shift, and go to state 25
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    $default  reduce using rule 19 (arguments)

    arguments  go to state 81
    term       go to state 28
    funcCall   go to state 22
    expr       go to state 55
    preexpr    go to state 31


State 74

   31 stat: VAR ID ASSIGN expr .

    $default  reduce using rule 31 (stat)


State 75

   15 multexpr: term STAR . multexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    multexpr  go to state 82
    term      go to state 62
    funcCall  go to state 22


State 76

    9 orexpr: term OR . orexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    orexpr    go to state 83
    term      go to state 65
    funcCall  go to state 22


State 77

   11 plusexpr: term PLUS . plusexpr

    NUMBER  shift, and go to state 12
    ID      shift, and go to state 26
    BRACEL  shift, and go to state 15

    plusexpr  go to state 84
    term      go to state 68
    funcCall  go to state 22


State 78

   28 guarded: expr ARROWR stats BREAK . maybeid

    ID  shift, and go to state 85

    $default  reduce using rule 6 (maybeid)

    maybeid  go to state 86


State 79

   27 guarded: expr ARROWR stats CONTINUE . maybeid

    ID  shift, and go to state 85

    $default  reduce using rule 6 (maybeid)

    maybeid  go to state 87


State 80

   13 dostat: ID COLON DO guardedlist END .

    $default  reduce using rule 13 (dostat)


State 81

   18 arguments: expr COMMA arguments .

    $default  reduce using rule 18 (arguments)


State 82

   15 multexpr: term STAR multexpr .

    $default  reduce using rule 15 (multexpr)


State 83

    9 orexpr: term OR orexpr .

    $default  reduce using rule 9 (orexpr)


State 84

   11 plusexpr: term PLUS plusexpr .

    $default  reduce using rule 11 (plusexpr)


State 85

    5 maybeid: ID .

    $default  reduce using rule 5 (maybeid)


State 86

   28 guarded: expr ARROWR stats BREAK maybeid .

    $default  reduce using rule 28 (guarded)


State 87

   27 guarded: expr ARROWR stats CONTINUE maybeid .

    $default  reduce using rule 27 (guarded)
